name: CI Checks

on:
  push:
    branches: ["**"]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  unittests-sanitizer:
    runs-on: ubuntu-latest
    steps:
      - name: Clone This Repo
        uses: actions/checkout@v2
      - name: Build with Sanitizers
        run: |
          sudo apt-get install -y cmake lcov
          CFLAGS="  -O0 -Wall -Wextra"
          CFLAGS+=" -Werror -Wno-error=pedantic"
          CFLAGS+=" -D_FORTIFY_SOURCE=2"
          CFLAGS+=" -Wformat"
          CLFAGS+=" -Wformat-security"
          CFLAGS+=" -Warray-bounds"
          CFLAGS+=" -fsanitize=address,undefined"
          CFLAGS+=" -fsanitize=pointer-compare -fsanitize=pointer-subtract"
          CFLAGS+=" -fsanitize-recover=undefined"
          CFLAGS+=" -fsanitize-address-use-after-scope"
          CFLAGS+=" -fsanitize-undefined-trap-on-error"
          CFLAGS_=" -fstack-protector-all"
          cmake -S test -B build \
          -G "Unix Makefiles" \
          -DCMAKE_BUILD_TYPE=Debug \
          -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \
          -DCMAKE_C_FLAGS="${CFLAGS}"
          make -C build all
      - name: Run Tests with Sanitizers
        run: |
          cd build
          make coverage
          ctest -E system --output-on-failure
          cd ..
  unittests-coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Clone This Repo
        uses: actions/checkout@v2
      - name: Build Tests for Coverage
        run: |
          sudo apt-get install -y cmake lcov
          CFLAGS="  --coverage -O0 -Wall -Wextra"
          CFLAGS+=" -Werror -Wno-error=pedantic"
          CFLAGS+=" -DNDEBUG"
          cmake -S test -B build_cov \
          -G "Unix Makefiles" \
          -DCMAKE_BUILD_TYPE=Debug \
          -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \
          -DCMAKE_C_FLAGS="${CFLAGS}"
          make -C build_cov all
      - name: Run Tests for Coverage
        run: |
          cd build_cov
          make coverage
          ctest -E system --output-on-failure
          cd ..
          declare -a EXCLUDE=("\*test\*" "\*CMakeCCompilerId\*" "\*mocks\*" "\*3rdparty\*")
          echo ${EXCLUDE[@]} | xargs lcov --rc lcov_branch_coverage=1 -r build_cov/coverage.info -o build_cov/coverage.info
          lcov --rc lcov_branch_coverage=1 --list build_cov/coverage.info
      - name: Check Coverage
        uses: FreeRTOS/CI-CD-Github-Actions/coverage-cop@main
        with:
          path: ./build_cov/coverage.info
  complexity:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check complexity
        uses: FreeRTOS/CI-CD-Github-Actions/complexity@main
        with:
          path: ./
  doxygen:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Run doxygen build
        uses: FreeRTOS/CI-CD-Github-Actions/doxygen@main
        with:
          path: ./
  spell-check:
    runs-on: ubuntu-latest
    steps:
      - name: Clone This Repo
        uses: actions/checkout@v2
      - name: Run spellings check
        uses: FreeRTOS/CI-CD-Github-Actions/spellings@main
        with:
          path: ./
  formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check formatting
        uses: FreeRTOS/CI-CD-Github-Actions/formatting@main
        with:
          path: ./
  ssot-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v2
        with:
          path: current
      - name: Checkout coreMQTT
        uses: actions/checkout@v2
        with:
          ref: main
          repository: FreeRTOS/coreMQTT
          path: ssot
      - name: Check transport_interface.h
        run: |
          SSOT_FILE="ssot/source/interface/transport_interface.h"
          CURRENT_FILE="current/source/interface/transport_interface.h"
          diff <(tail -n +3 $SSOT_FILE) <(tail -n +3 $CURRENT_FILE)
          if [ "$?" -ne "0" ]; then
            echo "transport_interface.h differs from coreMQTT."
            exit 1
          else
            exit 0
          fi
  git-secrets:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Checkout awslabs/git-secrets
        uses: actions/checkout@v2
        with:
          repository: awslabs/git-secrets
          ref: master
          path: git-secrets
      - name: Install git-secrets
        run: cd git-secrets && sudo make install && cd ..
      - name: Run git-secrets
        run: |
          git-secrets --register-aws
          git-secrets --scan
  memory_statistics:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
            submodules: 'recursive'
      - name: Install Python3
        uses: actions/setup-python@v2
        with:
          python-version: '3.7.10'
      - name: Measure sizes
        uses: FreeRTOS/CI-CD-Github-Actions/memory_statistics@main
        with:
            config: .github/memory_statistics_config.json
            check_against: docs/doxygen/include/size_table.html
